[{"D:\\Complete-React-Guide\\src\\index.js":"1","D:\\Complete-React-Guide\\src\\App.js":"2","D:\\Complete-React-Guide\\src\\components\\Expenses\\Expenses.js":"3","D:\\Complete-React-Guide\\src\\components\\Expenses\\ExpenseItems.js":"4","D:\\Complete-React-Guide\\src\\components\\UI\\Card.js":"5","D:\\Complete-React-Guide\\src\\components\\Expenses\\ExpenseDate.js":"6","D:\\Complete-React-Guide\\src\\components\\NewExpense\\NewExpense.js":"7","D:\\Complete-React-Guide\\src\\components\\NewExpense\\ExpenseForm.js":"8","D:\\Complete-React-Guide\\src\\components\\ExpenseFilter\\ExpenseFilter.js":"9"},{"size":142,"mtime":1616592305000,"results":"10","hashOfConfig":"11"},{"size":880,"mtime":1638856410300,"results":"12","hashOfConfig":"11"},{"size":2100,"mtime":1638859113197,"results":"13","hashOfConfig":"11"},{"size":970,"mtime":1638851911831,"results":"14","hashOfConfig":"11"},{"size":197,"mtime":1638506545859,"results":"15","hashOfConfig":"11"},{"size":550,"mtime":1638506515696,"results":"16","hashOfConfig":"11"},{"size":590,"mtime":1638855712758,"results":"17","hashOfConfig":"11"},{"size":3846,"mtime":1638798681975,"results":"18","hashOfConfig":"11"},{"size":874,"mtime":1638848004203,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1lxivzf",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"D:\\Complete-React-Guide\\src\\index.js",[],["41","42"],"D:\\Complete-React-Guide\\src\\App.js",[],"D:\\Complete-React-Guide\\src\\components\\Expenses\\Expenses.js",["43"],"D:\\Complete-React-Guide\\src\\components\\Expenses\\ExpenseItems.js",["44"],"import React, { useState } from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nfunction ExpenseItem(props) {\r\n    // const expenseDate = new Date(2021, 11, 1);\r\n    // const expenseTitle = 'Car Insurance';\r\n    // const expenseAmount = '2800';\r\n\r\n    // const [title, setTitle] = useState(props.title);\r\n\r\n    // const clickHandler = () => {\r\n    //     setTitle('Updated');\r\n    //     console.log(title);\r\n    // };\r\n\r\n    return (\r\n        <Card className=\"expense-item\">\r\n            {/* <div>{props.date.toISOString()}</div> */}\r\n            <ExpenseDate date={props.date} />\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">{props.amount}</div>\r\n            </div>\r\n            {/* <button onClick={clickHandler}>Change Title</button> */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem;","D:\\Complete-React-Guide\\src\\components\\UI\\Card.js",[],"D:\\Complete-React-Guide\\src\\components\\Expenses\\ExpenseDate.js",[],"D:\\Complete-React-Guide\\src\\components\\NewExpense\\NewExpense.js",[],"D:\\Complete-React-Guide\\src\\components\\NewExpense\\ExpenseForm.js",[],"D:\\Complete-React-Guide\\src\\components\\ExpenseFilter\\ExpenseFilter.js",["45","46"],"import React, { useState } from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n    const [filter, setFilter] = useState('');\r\n    const filterChangeHandler = (event) => {\r\n        props.onExpenseFilter(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label className='expenses-filter label'>Filter by year</label>\r\n                <select value={props.select} onChange={filterChangeHandler} >\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseFilter;",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":51,"column":44,"nodeType":"53","messageId":"54","endLine":51,"endColumn":46},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":7,"column":12,"nodeType":"57","messageId":"58","endLine":7,"endColumn":18},{"ruleId":"55","severity":1,"message":"60","line":7,"column":20,"nodeType":"57","messageId":"58","endLine":7,"endColumn":29},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]